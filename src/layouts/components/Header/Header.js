import classNames from 'classnames/bind';
import styles from './Header.module.scss';
import config from '~/config';
import { Link, useNavigate } from 'react-router-dom';
import Menu from '~/components/Popper/Menu';
import TimeDate from '~/components/TimeDate';
import { useEffect, useState } from 'react';
import Login from './Login';
import { useSelector } from 'react-redux';
import { LayoutDashboard, LogOut } from 'lucide-react';
import { useDispatch } from 'react-redux';
import { logout } from '~/store/reducers/userReducer';
import { toast } from 'react-toastify';
import thongbaoService from '~/services/thongbaoService';
import userService from '~/services/userService';

const cx = classNames.bind(styles);

const LANGUAGE_ITEMS = [
    {
        code: 'vi',
        title: 'Ti·∫øng Vi·ªát',
    },
    {
        code: 'en',
        title: 'English',
    },
];
const SEARCH_ITEMS = [
    {
        title: 'Danh s√°ch thi·∫øt b·ªã',
        to: config.routes.Dsthietbi,
    },
    {
        title: 'VƒÉn b·∫£n ph√°p quy',
    },
    {
        id: 'approved_contractors',
        title: 'Nh√† th·∫ßu ƒë∆∞·ª£c ph√™ duy·ªát',
    },
];
const USER_ITEMS = [
    {
        icon: <LayoutDashboard size={18} />,
        title: 'Trang t·ªïng quan',
        to: config.routes.home,
    },
    {
        icon: <LogOut size={18} />,
        title: 'ƒêƒÉng xu·∫•t',
    },
];
const HDSD_ITEMS = [
    {
        title: 'ƒê∆°n v·ªã s·ª≠ d·ª•ng',
    },
    {
        title: 'Tr∆∞·ªüng ph√≤ng CSVC',
    },
    {
        title: 'Ph√≥ tr∆∞·ªüng ph√≤ng CSVC',
    },
    {
        title: 'Chuy√™n vi√™n CSVC',
    },
    {
        title: 'Nh√¢n vi√™n k·ªπ thu·∫≠t',
    },
    {
        title: 'Ban gi√°m hi·ªáu',
    },
];
function Header() {
    const [open, setOpen] = useState(false);

    const toggleDropdown = () => {
        setOpen(!open);
    };

    useEffect(() => {
        const handleClickOutside = (event) => {
        const isClickInside = event.target.closest('.notification-wrapper');
        if (!isClickInside) {
            setOpen(false);
        }
        };

        document.addEventListener('mousedown', handleClickOutside);
        return () => {
        document.removeEventListener('mousedown', handleClickOutside);
        };
    }, []);

    const user = useSelector((state) => state.user.currentUser);
    const [showLoginModal, setshowLoginModal] = useState(false);
    const [roleuser, setRoleuser] = useState('');

    useEffect(() => {
        const fetchRoleUser = async () => {
            if (!user || !user.id) return;
            try {
                const response = await userService.getAllRoleUsersService(user.id);
                if (response?.errCode === 0) {
                    setRoleuser(response.users[0]?.tenVaiTro || '');
                }
            } catch (error) {
                console.error('L·ªói khi t·∫£i vai tr√≤ ng∆∞·ªùi d√πng:', error);
            }
        };

        fetchRoleUser();
    }, [user]); // L·∫Øng nghe s·ª± thay ƒë·ªïi c·ªßa user

    const [thongBaoList, setThongBaoList] = useState([]);

    useEffect(() => {
        console.log(user);
        
        const fetchThongBaos = async () => {
            if (user?.id) {
                try {
                    const res = await thongbaoService.getThongBaoByTaiKhoan(user.id);
                    console.log(res);
                    
                    if(res.errCode === 0){
                        setThongBaoList(res.danhsachthongbao || []);
                    }
                } catch (err) {
                    console.error('L·ªói khi l·∫•y danh s√°ch th√¥ng b√°o:', err);
                    toast.error('L·ªói khi l·∫•y danh s√°ch th√¥ng b√°o')
                }
            }
        };

        fetchThongBaos();
    }, [user]);

    const navigate = useNavigate();
    const handleTracuuClick = (item) => {
        if (item.to) {
            navigate(item.to);
        }
    };
    // Handle logic
    const handleLanguageChange = (item) => {
        console.log('Selected language:', item);
        // TODO: Thay ƒë·ªïi ng√¥n ng·ªØ trong app t·∫°i ƒë√¢y (v√≠ d·ª•: i18n.changeLanguage(item.code))
    };
    const dispatch = useDispatch();
    const handleUserClick = (item) => {
        if (item.title === 'ƒêƒÉng xu·∫•t') {
            dispatch(logout());
            navigate(config.routes.home); // Chuy·ªÉn h∆∞·ªõng sau khi ƒëƒÉng xu·∫•t (t√πy ch·ªçn)
        } else if (item.to) {
            navigate(item.to);
        }
    };
    const handleShowLogin = () => {
        setshowLoginModal(true);
    };
    const handleCloseLoginModals = () => {
        setshowLoginModal(false);
    };
    return (
        <header>
            {/* -- HEADER TOP-- */}
            <div className={cx('header')}>
                <div className={cx('header-top')}>
                    <div className={cx('header-container')}>
                        <Link to={config.routes.home} className={cx('logo-title')}>
                            <img
                                src="https://reviewedu.net/wp-content/uploads/2021/08/dai-hoc-su-pham-ky-thuat-da-nang-ute-1.jpg"
                                alt="UTE logo"
                            />
                            <div className={cx('logo-text')}>
                                <h1>H·ªá th·ªëng ƒë·∫•u th·∫ßu ƒëi·ªán t·ª≠</h1>
                                <h2>ƒê·∫°i h·ªçc s∆∞ ph·∫°m k·ªπ thu·∫≠t</h2>
                                <div className={cx('slogan')}>
                                    Minh b·∫°ch ‚Äì C√¥ng b·∫±ng ‚Äì Hi·ªáu qu·∫£: H·ªá th·ªëng ƒë·∫•u th·∫ßu UTE v√¨ s·ª± ph√°t tri·ªÉn b·ªÅn v·ªØng.
                                </div>
                            </div>
                        </Link>
                        <div className={cx('header-right')}>
                            <div className={cx('support')}>
                                <span className={cx('phone-icon')}>üìû</span> T·ªïng ƒë√†i h·ªó tr·ª£: 19006126
                            </div>
                            <Menu items={LANGUAGE_ITEMS} onChange={handleLanguageChange}>
                                <div className={cx('language')}>
                                    <img src="https://flagcdn.com/w40/vn.png" alt="VN" />
                                    Ti·∫øng Vi·ªát <span className={cx('dropdown-arrow')}>‚ñº</span>
                                </div>
                            </Menu>
                        </div>
                    </div>
                </div>

                {/* -- MENU BAR-- */}
                <div className={cx('header-menu')}>
                    <div className={cx('header-container')}>
                        <div className={cx('menu-left')}>
                            <Link to={config.routes.home} className={cx('menu-item')}>
                                Trang ch·ªß
                            </Link>
                            <Menu items={SEARCH_ITEMS} onChange={handleTracuuClick} V2>
                                <div className={cx('menu-item')}>Tra c·ª©u</div>
                            </Menu>
                            <div className={cx('menu-item')}>C√¢u h·ªèi th∆∞·ªùng g·∫∑p</div>
                            <Menu items={HDSD_ITEMS} onChange={handleLanguageChange} V2>
                                <div className={cx('menu-item')}>H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng</div>
                            </Menu>
                            <div className={cx('menu-item')}>Li√™n h·ªá</div>
                        </div>
                        <div className={cx('menu-right')}>
                            {/* <div className={cx('menu-item')}>Gi·ªõi thi·ªáu</div>
                        <div className={cx('menu-item')}>Tin t·ª©c</div>
                        <div className={cx('menu-item')}>Th√¥ng b√°o c·ªßa b·ªô</div>
                        <div className={cx('menu-item')}>Li√™n h·ªá - G√≥p √Ω</div> */}
                            <div className={cx('notification-icon')} onClick={toggleDropdown}>
                                <span>üîî</span>
                                {thongBaoList?.length > 0 && (
                                    <span className={cx('badge')}>{thongBaoList.length}</span>
                                )}
                                {open && (
                                    <div className={cx('dropdown')}>
                                        <div className={cx('header')}>Th√¥ng b√°o</div>
                                        {thongBaoList.length === 0 ? (
                                            <div className={cx('empty')}>Kh√¥ng c√≥ th√¥ng b√°o n√†o</div>
                                        ) : (
                                            thongBaoList.map((tb, index) => (
                                                <div key={index} className={cx('item', { unread: tb.trangThai === 'Ch∆∞a ƒë·ªçc' })}>
                                                    <div className={cx('noi-dung')}>{tb.noiDungThongBao}</div>
                                                    <div className={cx('ngay')}>{new Date(tb.ngayThongBao).toLocaleDateString('vi-VN')}</div>
                                                </div>
                                            ))
                                        )}
                                    </div>
                                )}
                            </div>
                            <div className={cx('time-date')}>
                                <TimeDate />
                            </div>

                            <div className={cx('user-info')}>
                                {user ? (
                                    <Menu items={USER_ITEMS} onChange={handleUserClick} V3>
                                        <div className={cx('info-container')}>
                                            <div className={cx('user-text')}>
                                                <div className={cx('user-name')}>
                                                    <strong>{user.hoTen}</strong>
                                                </div>
                                                <div className={cx('user-role')}>{roleuser}</div>
                                            </div>
                                            <img
                                                src="https://cdn-icons-png.flaticon.com/512/3177/3177440.png"
                                                alt="Avatar"
                                            />
                                        </div>
                                    </Menu>
                                ) : (
                                    <button className={cx('btn-login')} onClick={handleShowLogin}>
                                        ƒêƒÉng nh·∫≠p
                                    </button>
                                )}
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            {showLoginModal && <Login onClose={handleCloseLoginModals} />}
        </header>
    );
}

export default Header;
